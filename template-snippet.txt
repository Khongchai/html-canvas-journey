snippet
{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "canvas-playground": {
    "scope": "javascript, typescript, html",
    "prefix": "cp",
    "body": [
      " <!DOCTYPE html> <html lang='en'> <head> <meta charset='UTF-8' /> <meta http-equiv='X-UA-Compatible' content='IE=edge' /> <meta name='viewport' content='width=device-width, initial-scale=1.0' /> ",
      "<title></title> </head> <body onload='draw();'> <div> <canvas id='canvas' style='border: 1px solid black' width='500px' height='500px' ></canvas> </div> </body> ",
      "<script> let canvas = document.getElementById('canvas'); const ctx = canvas.getContext('2d'); const draw = () => { ctx.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight); requestAnimationFrame(draw); }; </script> </html> "
    ],
    "description": "A quick canvas and canvas animation playground shortcut."
  }
}